c
params[:post][:avatar].count
c
params
c
@post.comments.where("is_archive=?",false)
@post
c
@post_comments = Post.includes(:comments).find_by_id(params[:id])
c
@post
@posy
c
c = @post.includes(:commentable)
c = @post.includes(:comments)
@post
@post.class
c = @post.includes(:comments)
c = @post.includes(:comments).first
@post
c
p.each do |c|
p = Post.includes(:comments).find_by_id(params[:id])
@post
c
c = @post.includes(:comments)
@post
c
params
@post
c
exit
Post.all
@post
c
sign_in_and_redirect @user, event: :authentication
@user.sign_in_type.eql? "google"
@user.present?
if @user.present?
@user = User.all.where("email =?",email).first
email = request.env['omniauth.auth']['info']['email']
c
n
c
user.first.sign_in_type
user.first
user.sign_in_type
user = User.all.where("email =?",email)
email = request.env['omniauth.auth']['info']['email']
c
request.env['omniauth.auth']['info']['email']
request.env['omniauth.auth']['info']
request.env['omniauth.auth']
oauth_data[:info]["email"]
oauth_data[:info][:email]
oauth_data["info"]["email"]
info
info=
request.env['omniauth.auth'].class
request.env['omniauth.auth']
User.from_omniauth(request.env['omniauth.auth'])
params
c
@user.update_attribute(:sign_in_type,"gmail")
n
if @user.persisted?
@user = User.from_omniauth(request.env['omniauth.auth'])
c
if_like = params[:like_boolean]
@post = Post.find_by_id(params[:id])
c
params[:like_boolean]
c
if if_like == "true"
if if_like <> "true"
if if_like <=> "true"
if_like
if_like = "true"
if_like = "true
if if_like <=> "false"
if_like = params[:like_boolean].to_s
@post = Post.find_by_id(params[:id])
c
if if_like == "true"
if if_like == "true
if_like
is_like
if is_like == 'true'
if is_like == true
if is_like == 't'
if "false" == is_like
if if_like <=> "false"
if_like = params[:like_boolean]
params
if(if_like === "false
if_like.to_s
if_like.to_c
if_like
if_like = params[:like_boolean]
@post = Post.find_by_id(params[:id])
c
params[:is_boolean]
params[:is_liked]
if_like = params[:like_boolean].to_boolean
if_like = params[:like_boolean].to_b
c
if if_like=='false'
if if_like=="false"
if if_like
if_like = params[:like_boolean].to_s
c
if is_like
if (if_like.to_s == 'false')
if_like.to_s == 'false'
if if_like.to_s == 'false'
if_like.to_s
if_like = params[:like_boolean]
c
if if_like == "false"
if_like = params[:like_boolean]
@post = Post.find_by_id(params[:id])
c
params[:like_boolean] == "false"
params[:like_boolean] == false
params[:like_boolean]
if params[:like_boolean] == "false"
@post.pictures
@post = Post.find_by_id(params[:id])
c
po.first.update_attribute(:is_liked,false)
po.first
po
po.update_attribute(is_liked: false)
po.update(is_liked: false)
po.update_attribute(:is_liked => false)
po.update(:is_liked,false).first
po.update(:is_liked,false)
po.update_all(:is_liked,false)
po.update_attribute(:is_liked,false)
po.update_attributes(:is_liked,false)
po
po = @post.likes.where("user_id =?", current_user.id)
c
po
@post
po
@post
po.class
po = @post.likes.where("user_id =?", current_user.id)
po.update_attribute(:is_liked,false)
po.update_attribute(:is_liked => false)
po = @post.likes.where("user_id =?", current_user.id)
c
po = @post.likes.where("user_id =?", current_user.id)
@post = Post.find_by_id(params[:id])
c
@post = Post.find_by_id(params[:id])
params[:id]
post_id = params[:id]
c
params
c
params
c
params
c
params
c
@picture_comment = Picture.create(:name => image,:imageable_id => post_comment.id,:imageable_type => "Comment")
n
post_comment = @post.comments.create(:comment => post_text,:commentable_id => post_id,:user_id => current_user.id,:avatar => image)
@post = Post.find_by_id(params[:post_id])
image = params[:comment][:avatar]
post_text = params[:comment][:comment]
post_id = params[:post_id]
c
@comments_count = Comment.where("commentable_id =?","#{@post.id}").count
@posts = Post.all.where("is_archive =? ",false)
c
current_user.id
comments = Comment.where("commentable_id =?","#{@post.id}")
@post = Post.find_by_id(params[:id])
c
params
post_params
c
params
c
"#{current_user.id}" == @post.user_id
current_user.id == @post.user_id
if (current_user.id == #{@post.user_id})
current_user.id == #{@post.user_id}
current_user.id == "#{@post.user_id}"
c
@post.user_id
current_user.id
@post
current_user
c
Comment.pictures
Comment.all
@post.comments
@post.comments.create(:comment => post_text,:commentable_id => post_id,:user_id => current_user.id,:avatar => image)
@post = Post.find_by_id(params[:post_id])
params
exit
params
c
@post.update_attribute(:is_archive,true)
@post = Post.find_by_id(params[:post_id])
c
@post.update_attribute(:title,p)
@post.update(:title,p)
p = params[:title]
@post.update_attribute(:title => params[:title])
@post = Post.find_by_id(params[:id])
c
 current_user.id
c
@comments = Comment.where("commentable_id =?","#{@post.id}")
@post = Post.find_by_id(params[:id])
c
@post.comments
@post.comment
@post = Post.find_by_id(params[:id])
c
@comment = Comment.new
c
@post = Post.find_by_id(params[:id])
params
c
params
exit
params
c
p.pictures
p.picture
p = Post.first
@post.find(1)
@post.first
@posts
@posts = Post.all
c
Post.all
@posts
c
n
@posts = Post.all
